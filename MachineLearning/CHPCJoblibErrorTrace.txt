Traceback (most recent call last):
  File "/uufs/chpc.utah.edu/common/home/u0585767/ShahNLP/MachineLearning/SVM/SVM_TFIDF_Only.py", line 134, in <module>
    model.fit(noteBodies, labels)
  File "/uufs/chpc.utah.edu/sys/installdir/python/2.7.11-c7/lib/python2.7/site-packages/sklearn/model_selection/_search.py", line 945, in fit
    return self._fit(X, y, groups, ParameterGrid(self.param_grid))
  File "/uufs/chpc.utah.edu/sys/installdir/python/2.7.11-c7/lib/python2.7/site-packages/sklearn/model_selection/_search.py", line 564, in _fit
    for parameters in parameter_iterable
  File "/uufs/chpc.utah.edu/sys/installdir/python/2.7.11-c7/lib/python2.7/site-packages/sklearn/externals/joblib/parallel.py", line 768, in __call__
    self.retrieve()
  File "/uufs/chpc.utah.edu/sys/installdir/python/2.7.11-c7/lib/python2.7/site-packages/sklearn/externals/joblib/parallel.py", line 719, in retrieve
    raise exception
sklearn.externals.joblib.my_exceptions.JoblibTypeError: JoblibTypeError
___________________________________________________________________________
Multiprocessing exception:
...........................................................................
/uufs/chpc.utah.edu/common/home/u0585767/ShahNLP/MachineLearning/SVM/SVM_TFIDF_Only.py in <module>()
    129               "Accuracy" : "accuracy",
    130               "TruePos" : make_scorer(truePositives),
    131               "F-Score" : "f1"}
    132     refitScore = "Sensitivity"
    133     model = GridSearchCV(estimator=pipeline, param_grid=parameters, n_jobs=-1, scoring=scores, refit=refitScore, cv=10, verbose=5)
--> 134     model.fit(noteBodies, labels)
    135
    136     print "Using %s" % type(svm)
    137     print "Optimized for %s" % refitScore
    138     print model.best_params_

...........................................................................
/uufs/chpc.utah.edu/sys/installdir/python/2.7.11-c7/lib/python2.7/site-packages/sklearn/model_selection/_search.py in fit(self=GridSearchCV(cv=10, error_score='raise',
       ...(NPV), 'Accuracy': 'accuracy'},
       verbose=5), X=array([ "Admission Date:  [**2714-12-23**]      ...-4-4**]\n\n\nDOC CLASS'],
      dtype='|S36221'), y=array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,...0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0]), groups=None)
    940
    941         groups : array-like, with shape (n_samples,), optional
    942             Group labels for the samples used while splitting the dataset into
    943             train/test set.
    944         """
--> 945         return self._fit(X, y, groups, ParameterGrid(self.param_grid))
        self._fit = <bound method GridSearchCV._fit of GridSearchCV(...NPV), 'Accuracy': 'accuracy'},
       verbose=5)>
       X = array([ "Admission Date:  [**2714-12-23**]      ...-4-4**]\n\n\nDOC CLASS'],
      dtype='|S36221')
        y = array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,...0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0])
        groups = None
        self.param_grid = {'estimation__C': [100.0, 1000.0, 3000.0, 5000.0], 'estimation__kernel': ['linear'], 'feature_selection__k': [50, 100, 500, 'all'], 'vectorize__max_df': [0.5, 0.75, 0.9, 0.99], 'vectorize__min_df': [0.001, 0.01, 0.1], 'vectorize__ngram_range': [(1, 1), (1, 2), (1, 3)], 'vectorize__stop_words': ['english', None]}
    946
    947
    948 class RandomizedSearchCV(BaseSearchCV):
    949     """Randomized search on hyper parameters.

...........................................................................
/uufs/chpc.utah.edu/sys/installdir/python/2.7.11-c7/lib/python2.7/site-packages/sklearn/model_selection/_search.py in _fit(self=GridSearchCV(cv=10, error_score='raise',
       ...(NPV), 'Accuracy': 'accuracy'},
       verbose=5), X=array([ "Admission Date:  [**2714-12-23**]      ...-4-4**]\n\n\nDOC CLASS'],
      dtype='|S36221'), y=array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,...0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0]), groups=None, parameter_iterable=<sklearn.model_selection._search.ParameterGrid object>)
    559                                   fit_params=self.fit_params,
    560                                   return_train_score=self.return_train_score,
    561                                   return_n_test_samples=True,
    562                                   return_times=True, return_parameters=True,
    563                                   error_score=self.error_score)
--> 564           for parameters in parameter_iterable
        parameters = undefined
        parameter_iterable = <sklearn.model_selection._search.ParameterGrid object>
    565           for train, test in cv_iter)
    566
    567         # if one choose to see train score, "out" will contain train score info
    568         if self.return_train_score:

...........................................................................
/uufs/chpc.utah.edu/sys/installdir/python/2.7.11-c7/lib/python2.7/site-packages/sklearn/externals/joblib/parallel.py in __call__(self=Parallel(n_jobs=-1), iterable=<generator object <genexpr>>)
    763             if pre_dispatch == "all" or n_jobs == 1:
    764                 # The iterable was consumed all at once by the above for loop.
    765                 # No need to wait for async callbacks to trigger to
    766                 # consumption.
    767                 self._iterating = False
--> 768             self.retrieve()
        self.retrieve = <bound method Parallel.retrieve of Parallel(n_jobs=-1)>
    769             # Make sure that we get a last message telling us we are done
    770             elapsed_time = time.time() - self._start_time
    771             self._print('Done %3i out of %3i | elapsed: %s finished',
    772                         (len(self._output), len(self._output),

---------------------------------------------------------------------------
Sub-process traceback:
---------------------------------------------------------------------------
TypeError                                          Tue Nov 14 20:46:55 2017
PID: 28074Python 2.7.11: /uufs/chpc.utah.edu/common/home/u0585767/ShahNLP/MachineLearning/VENV/bin/python
...........................................................................
/uufs/chpc.utah.edu/sys/installdir/python/2.7.11-c7/lib/python2.7/site-packages/sklearn/externals/joblib/parallel.py in __call__(self=<sklearn.externals.joblib.parallel.BatchedCalls object>)
    126     def __init__(self, iterator_slice):
    127         self.items = list(iterator_slice)
    128         self._size = len(self.items)
    129
    130     def __call__(self):
--> 131         return [func(*args, **kwargs) for func, args, kwargs in self.items]
        func = <function _fit_and_score>
        args = (Pipeline(steps=[('vectorize', TfidfVectorizer(an...e, shrinking=True,
  tol=0.001, verbose=False))]), memmap([ "Admission Date:  [**2714-12-23**]     ...-4-4**]\n\n\nDOC CLASS'],
      dtype='|S36221'), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,...0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0]), {'Accuracy': 'accuracy', 'F-Score': 'f1', 'NPV': make_scorer(NPV), 'PPV': 'precision', 'Sensitivity': 'recall', 'Specificity': make_scorer(specificity), 'TruePos': make_scorer(truePositives)}, array([ 23,  24,  25,  26,  27,  28,  29,  30,  ..., 982, 983,
       984, 985, 986, 987, 988, 989]), array([  0,   1,   2,   3,   4,   5,   6,   7,  ...    293, 294, 295, 296, 297, 298, 299, 300, 301]), 5, {'estimation__C': 100.0, 'estimation__kernel': 'linear', 'feature_selection__k': 50, 'vectorize__max_df': 0.5, 'vectorize__min_df': 0.001, 'vectorize__ngram_range': (1, 1), 'vectorize__stop_words': 'english'})
        kwargs = {'error_score': 'raise', 'fit_params': {}, 'return_n_test_samples': True, 'return_parameters': True, 'return_times': True, 'return_train_score': True}
        self.items = [(<function _fit_and_score>, (Pipeline(steps=[('vectorize', TfidfVectorizer(an...e, shrinking=True,
  tol=0.001, verbose=False))]), memmap([ "Admission Date:  [**2714-12-23**]     ...-4-4**]\n\n\nDOC CLASS'],
      dtype='|S36221'), array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,...0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0]), {'Accuracy': 'accuracy', 'F-Score': 'f1', 'NPV': make_scorer(NPV), 'PPV': 'precision', 'Sensitivity': 'recall', 'Specificity': make_scorer(specificity), 'TruePos': make_scorer(truePositives)}, array([ 23,  24,  25,  26,  27,  28,  29,  30,  ..., 982, 983,
       984, 985, 986, 987, 988, 989]), array([  0,   1,   2,   3,   4,   5,   6,   7,  ...    293, 294, 295, 296, 297, 298, 299, 300, 301]), 5, {'estimation__C': 100.0, 'estimation__kernel': 'linear', 'feature_selection__k': 50, 'vectorize__max_df': 0.5, 'vectorize__min_df': 0.001, 'vectorize__ngram_range': (1, 1), 'vectorize__stop_words': 'english'}), {'error_score': 'raise', 'fit_params': {}, 'return_n_test_samples': True, 'return_parameters': True, 'return_times': True, 'return_train_score': True})]
    132
    133     def __len__(self):
    134         return self._size
    135

...........................................................................
/uufs/chpc.utah.edu/sys/installdir/python/2.7.11-c7/lib/python2.7/site-packages/sklearn/model_selection/_validation.py in _fit_and_score(estimator=Pipeline(steps=[('vectorize', TfidfVectorizer(an...e, shrinking=True,
  tol=0.001, verbose=False))]), X=memmap([ "Admission Date:  [**2714-12-23**]     ...-4-4**]\n\n\nDOC CLASS'],
      dtype='|S36221'), y=array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,...0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
       0]), scorer={'Accuracy': 'accuracy', 'F-Score': 'f1', 'NPV': make_scorer(NPV), 'PPV': 'precision', 'Sensitivity': 'recall', 'Specificity': make_scorer(specificity), 'TruePos': make_scorer(truePositives)}, train=array([ 23,  24,  25,  26,  27,  28,  29,  30,  ..., 982, 983,
       984, 985, 986, 987, 988, 989]), test=array([  0,   1,   2,   3,   4,   5,   6,   7,  ...    293, 294, 295, 296, 297, 298, 299, 300, 301]), verbose=5, parameters={'estimation__C': 100.0, 'estimation__kernel': 'linear', 'feature_selection__k': 50, 'vectorize__max_df': 0.5, 'vectorize__min_df': 0.001, 'vectorize__ngram_range': (1, 1), 'vectorize__stop_words': 'english'}, fit_params={}, return_train_score=True, return_parameters=True, return_n_test_samples=True, return_times=True, error_score='raise')
    255                              " numeric value. (Hint: if using 'raise', please"
    256                              " make sure that it has been spelled correctly.)")
    257
    258     else:
    259         fit_time = time.time() - start_time
--> 260         test_score = _score(estimator, X_test, y_test, scorer)
        test_score = undefined
        estimator = Pipeline(steps=[('vectorize', TfidfVectorizer(an...e, shrinking=True,
  tol=0.001, verbose=False))])
        X_test = memmap([ "Admission Date:  [**2714-12-23**]     ...ill\r\n\n\n\nDOC CLASS"],
      dtype='|S36221')
        y_test = array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,...0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 0, 0, 0, 0])
        scorer = {'Accuracy': 'accuracy', 'F-Score': 'f1', 'NPV': make_scorer(NPV), 'PPV': 'precision', 'Sensitivity': 'recall', 'Specificity': make_scorer(specificity), 'TruePos': make_scorer(truePositives)}
    261         score_time = time.time() - start_time - fit_time
    262         if return_train_score:
    263             train_score = _score(estimator, X_train, y_train, scorer)
    264

...........................................................................
/uufs/chpc.utah.edu/sys/installdir/python/2.7.11-c7/lib/python2.7/site-packages/sklearn/model_selection/_validation.py in _score(estimator=Pipeline(steps=[('vectorize', TfidfVectorizer(an...e, shrinking=True,
  tol=0.001, verbose=False))]), X_test=memmap([ "Admission Date:  [**2714-12-23**]     ...ill\r\n\n\n\nDOC CLASS"],
      dtype='|S36221'), y_test=array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,...0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0]), scorer={'Accuracy': 'accuracy', 'F-Score': 'f1', 'NPV': make_scorer(NPV), 'PPV': 'precision', 'Sensitivity': 'recall', 'Specificity': make_scorer(specificity), 'TruePos': make_scorer(truePositives)})
    283 def _score(estimator, X_test, y_test, scorer):
    284     """Compute the score of an estimator on a given test set."""
    285     if y_test is None:
    286         score = scorer(estimator, X_test)
    287     else:
--> 288         score = scorer(estimator, X_test, y_test)
        score = undefined
        scorer = {'Accuracy': 'accuracy', 'F-Score': 'f1', 'NPV': make_scorer(NPV), 'PPV': 'precision', 'Sensitivity': 'recall', 'Specificity': make_scorer(specificity), 'TruePos': make_scorer(truePositives)}
        estimator = Pipeline(steps=[('vectorize', TfidfVectorizer(an...e, shrinking=True,
  tol=0.001, verbose=False))])
        X_test = memmap([ "Admission Date:  [**2714-12-23**]     ...ill\r\n\n\n\nDOC CLASS"],
      dtype='|S36221')
        y_test = array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,...0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0])
    289     if hasattr(score, 'item'):
    290         try:
    291             # e.g. unwrap memmapped scalars
    292             score = score.item()

TypeError: 'dict' object is not callable
___________________________________________________________________________